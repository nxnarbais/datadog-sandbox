apiVersion: apps/v1
kind: Deployment
metadata:
  name: bitsapp-deployment
  labels:
    app: bitsapp
  #   tags.datadoghq.com/env: "dev"
  #   tags.datadoghq.com/service: "bitsapp"
  #   tags.datadoghq.com/version: "1.0.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: bitsapp
  template:
    metadata:
      labels:
        app: bitsapp
      #   tags.datadoghq.com/env: "dev"
      #   tags.datadoghq.com/service: "bitsapp"
      #   tags.datadoghq.com/version: "1.0.0"
      # annotations:
      #   ad.datadoghq.com/mongo.logs: '[{"source":"fastify","service":"bitsapp"}]'
    spec:
      containers:
      - name: bitsapp
        # image: node:16-slim
        image: node:16
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 200Mi
        env:
        # https://opentelemetry.io/docs/concepts/sdk-configuration/otlp-exporter-configuration/
        - name: OTEL_SERVICE_NAME
          value: bitsapp
        - name: OTEL_LOG_LEVEL
          value: DEBUG
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://jaeger-collector:4318
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: env=sandbox,service.namespace=sandbox,service.version=0.1.2,owner=ddog,deployment=green
        ports:
        - containerPort: 3000
        workingDir: /home/node/app
        command: ["npm", "run", "start"]
        volumeMounts:
        - mountPath: /home/node/app
          name: bitsapp-volume
      volumes:
      - name: bitsapp-volume
        hostPath:
          path: /app/datadog-sandbox/app_nodejs-fastify_otel
          type: Directory

---
# https://minikube.sigs.k8s.io/docs/handbook/accessing/#using-minikube-tunnel
apiVersion: v1
kind: Service
metadata:
  name: bitsapp-service
spec:
  selector:
    app: bitsapp
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      nodePort: 30001

# https://github.com/jaegertracing/jaeger-kubernetes/blob/master/all-in-one/jaeger-all-in-one-template.yml
---
apiVersion: v1
kind: List
items:
- apiVersion: apps/v1
  # apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: jaeger
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: all-in-one
  spec:
    replicas: 1
    strategy:
      type: Recreate
    selector:
      matchLabels:
        app: jaeger
    template:
      metadata:
        labels:
          app: jaeger
          app.kubernetes.io/name: jaeger
          app.kubernetes.io/component: all-in-one
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "16686"
      spec:
          containers:
          -   name: jaeger
              image: jaegertracing/all-in-one
              env:
              - name: COLLECTOR_ZIPKIN_HTTP_PORT
                value: "9411"
              - name: COLLECTOR_OTLP_ENABLED
                value: "true"
              ports:
                - containerPort: 5775
                  protocol: UDP
                - containerPort: 6831
                  protocol: UDP
                - containerPort: 6832
                  protocol: UDP
                - containerPort: 5778
                  protocol: TCP
                - containerPort: 16686
                  protocol: TCP
                - containerPort: 9411
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: "/"
                  port: 14269
                initialDelaySeconds: 5
- apiVersion: v1
  kind: Service
  metadata:
    name: jaeger-query
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: query
  spec:
    ports:
      - name: query-http
        port: 3030
        protocol: TCP
        targetPort: 16686
    selector:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: all-in-one
    type: LoadBalancer
- apiVersion: v1
  kind: Service
  metadata:
    name: jaeger-collector
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: collector
  spec:
    ports:
    - name: jaeger-collector-http2
      port: 4318
      protocol: TCP
      targetPort: 4318
    - name: jaeger-collector-tchannel
      port: 14267
      protocol: TCP
      targetPort: 14267
    - name: jaeger-collector-http
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: all-in-one
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    name: jaeger-agent
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: agent
  spec:
    ports:
    - name: agent-zipkin-thrift
      port: 5775
      protocol: UDP
      targetPort: 5775
    - name: agent-compact
      port: 6831
      protocol: UDP
      targetPort: 6831
    - name: agent-binary
      port: 6832
      protocol: UDP
      targetPort: 6832
    - name: agent-configs
      port: 5778
      protocol: TCP
      targetPort: 5778
    clusterIP: None
    selector:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: all-in-one
- apiVersion: v1
  kind: Service
  metadata:
    name: zipkin
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: zipkin
  spec:
    ports:
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    clusterIP: None
    selector:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: all-in-one
